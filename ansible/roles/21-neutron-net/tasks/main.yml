---
- name: Install Nova
  yum:
    name:  ['openstack-neutron','openstack-neutron-ml2','openstack-neutron-openvswitch']
    state: present
    enablerepo: centos-openstack-rocky

- name: Check bck.neutron.conf file exists
  stat:
    path: /etc/neutron/bck.neutron.conf
  register: bck_neutron

- name: Backup neutron.conf file
  copy:
    src: /etc/neutron/neutron.conf
    dest: /etc/neutron/bck.neutron.conf
    remote_src: yes
  when: bck_neutron.stat.exists == false

- name: Delete neutron.conf file
  file:
    path: /etc/neutron/neutron.conf
    state: absent
  when: bck_neutron.stat.exists == false

- name: Create neutron.conf file
  template:
    src:  neutron.conf.j2
    dest: /etc/neutron/neutron.conf
    owner: root
    group: neutron
    mode: 0640
    force: yes

- name: Check bck.l3_agent.ini file exists
  stat:
    path: /etc/neutron/bck.l3_agent.ini
  register: bck_l3_agent

- name: Backup l3_agent.ini file
  copy:
    src: /etc/neutron/l3_agent.ini
    dest: /etc/neutron/bck.l3_agent.ini
    remote_src: yes
  when: bck_l3_agent.stat.exists == false

- name: Modify l3_agent.ini file
  lineinfile:
    path: /etc/neutron/l3_agent.ini
    insertafter: '#interface_driver'
    line: 'interface_driver = openvswitch'

- name: Check bck.dhcp_agent.ini file exists
  stat:
    path: /etc/neutron/bck.dhcp_agent.ini
  register: bck_dhcp_agent

- name: Backup dhcp_agent.ini file
  copy:
    src: /etc/neutron/dhcp_agent.ini
    dest: /etc/neutron/bck.dhcp_agent.ini
    remote_src: yes
  when: bck_dhcp_agent.stat.exists == false

- name: Modify dhcp_agent.ini file (1)
  lineinfile:
    path: /etc/neutron/dhcp_agent.ini
    insertafter: '#interface_driver'
    line: 'interface_driver = openvswitch'

- name: Modify dhcp_agent.ini file (2)
  lineinfile:
    path: /etc/neutron/dhcp_agent.ini
    insertafter: '#dhcp_driver'
    line: 'dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq'

- name: Modify dhcp_agent.ini file (3)
  lineinfile:
    path: /etc/neutron/dhcp_agent.ini
    insertafter: '#enable_isolated_metadata'
    line: 'enable_isolated_metadata = true'

- name: Check bck.metadata_agent.ini file exists
  stat:
    path: /etc/neutron/bck.metadata_agent.ini
  register: bck_metadata

- name: Backup metadata_agent.ini file
  copy:
    src: /etc/neutron/metadata_agent.ini
    dest: /etc/neutron/bck.metadata_agent.ini
    remote_src: yes
  when: bck_metadata.stat.exists == false

- name: Modify metadata_agent.ini file (1)
  lineinfile:
    path: /etc/neutron/metadata_agent.ini
    insertafter: '#nova_metadata_host '
    line: "nova_metadata_host = {{ hostvars[groups['control'][0]].ansible_host }}"

- name: Modify metadata_agent.ini file (2)
  lineinfile:
    path: /etc/neutron/metadata_agent.ini
    insertafter: '#metadata_proxy_shared_secret'
    line: 'metadata_proxy_shared_secret = {{ metadata_secret }}'

- name: Modify metadata_agent.ini file (3)
  lineinfile:
    path: /etc/neutron/metadata_agent.ini
    insertafter: '#memcache_servers ='
    line: "memcache_servers = {{ hostvars[groups['control'][0]].ansible_host }}:11211"

- name: Check bck.ml2_conf.ini file exists
  stat:
    path: /etc/neutron/plugins/ml2/bck.ml2_conf.ini
  register: bck_ml2_conf

- name: Backup ml2_conf.ini file
  copy:
    src: /etc/neutron/plugins/ml2/ml2_conf.ini
    dest: /etc/neutron/plugins/ml2/bck.ml2_conf.ini
    remote_src: yes
  when: bck_ml2_conf.stat.exists == false

- name: Modify ml2_conf.ini file (1)
  lineinfile:
    path: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: '#type_drivers = '
    line: 'type_drivers = flat,vlan,gre,vxlan'

- name: Modify ml2_conf.ini file (2)
  lineinfile:
    path: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: '#tenant_network_types ='
    line: 'tenant_network_types ='

- name: Modify ml2_conf.ini file (3)
  lineinfile:
    path: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: '#mechanism_drivers ='
    line: 'mechanism_drivers = openvswitch,l2population'

- name: Modify ml2_conf.ini file (4)
  lineinfile:
    path: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: '#extension_drivers ='
    line: 'extension_drivers = port_security'

- name: Check bck.openvswitch_agent.ini file exists
  stat:
    path: /etc/neutron/plugins/ml2/bck.openvswitch_agent.ini
  register: bck_openvswitch

- name: Backup openvswitch_agent.ini file
  copy:
    src: /etc/neutron/plugins/ml2/openvswitch_agent.ini
    dest: /etc/neutron/plugins/ml2/bck.openvswitch_agent.ini
    remote_src: yes
  when: bck_openvswitch.stat.exists == false

- name: Modify openvswitch_agent.ini file (1)
  lineinfile:
    path: /etc/neutron/plugins/ml2/openvswitch_agent.ini
    insertafter: '#firewall_driver ='
    line: 'firewall_driver = openvswitch'

- name: Modify openvswitch_agent.ini file (2)
  lineinfile:
    path: /etc/neutron/plugins/ml2/openvswitch_agent.ini
    insertafter: '#enable_security_group ='
    line: 'enable_security_group = true'

- name: Modify openvswitch_agent.ini file (3)
  lineinfile:
    path: /etc/neutron/plugins/ml2/openvswitch_agent.ini
    insertafter: '#enable_ipset ='
    line: 'enable_ipset = true'

- name: Set neutron_can_network flag on and keep it persistent
  seboolean:
    name: neutron_can_network
    state: yes
    persistent: yes

- name: Set haproxy_connect_any flag on and keep it persistent
  seboolean:
    name: haproxy_connect_any
    state: yes
    persistent: yes

- name: Set daemons_enable_cluster_mode flag on and keep it persistent
  seboolean:
    name: daemons_enable_cluster_mode
    state: yes
    persistent: yes

- name: Create symbolic link
  file:
    src: /etc/neutron/plugins/ml2/ml2_conf.ini
    path: /etc/neutron/plugin.ini
    state: link

- name: Start and enable openvswitch service
  service:
    name: openvswitch
    state: started
    enabled: yes

- name: Start and enable neutron-dhcp-agent service
  service:
    name: neutron-dhcp-agent
    state: started
    enabled: yes

- name: Start and enable neutron-l3-agent service
  service:
    name: neutron-l3-agent
    state: started
    enabled: yes

- name: Start and enable neutron-metadata-agent service
  service:
    name: neutron-metadata-agent
    state: started
    enabled: yes

- name: Start and enable neutron-openvswitch-agent service
  service:
    name: neutron-openvswitch-agent
    state: started
    enabled: yes
